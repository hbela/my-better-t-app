
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `apikey` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model apikey
 * 
 */
export type apikeyModel = runtime.Types.Result.DefaultSelection<Prisma.$apikeyPayload>

export type AggregateApikey = {
  _count: ApikeyCountAggregateOutputType | null
  _avg: ApikeyAvgAggregateOutputType | null
  _sum: ApikeySumAggregateOutputType | null
  _min: ApikeyMinAggregateOutputType | null
  _max: ApikeyMaxAggregateOutputType | null
}

export type ApikeyAvgAggregateOutputType = {
  remaining: number | null
  requestCount: number | null
}

export type ApikeySumAggregateOutputType = {
  remaining: number | null
  requestCount: number | null
}

export type ApikeyMinAggregateOutputType = {
  id: string | null
  name: string | null
  key: string | null
  userId: string | null
  enabled: boolean | null
  remaining: number | null
  requestCount: number | null
  lastRequest: Date | null
  expiresAt: Date | null
  createdAt: Date | null
}

export type ApikeyMaxAggregateOutputType = {
  id: string | null
  name: string | null
  key: string | null
  userId: string | null
  enabled: boolean | null
  remaining: number | null
  requestCount: number | null
  lastRequest: Date | null
  expiresAt: Date | null
  createdAt: Date | null
}

export type ApikeyCountAggregateOutputType = {
  id: number
  name: number
  key: number
  userId: number
  enabled: number
  remaining: number
  requestCount: number
  lastRequest: number
  expiresAt: number
  createdAt: number
  metadata: number
  _all: number
}


export type ApikeyAvgAggregateInputType = {
  remaining?: true
  requestCount?: true
}

export type ApikeySumAggregateInputType = {
  remaining?: true
  requestCount?: true
}

export type ApikeyMinAggregateInputType = {
  id?: true
  name?: true
  key?: true
  userId?: true
  enabled?: true
  remaining?: true
  requestCount?: true
  lastRequest?: true
  expiresAt?: true
  createdAt?: true
}

export type ApikeyMaxAggregateInputType = {
  id?: true
  name?: true
  key?: true
  userId?: true
  enabled?: true
  remaining?: true
  requestCount?: true
  lastRequest?: true
  expiresAt?: true
  createdAt?: true
}

export type ApikeyCountAggregateInputType = {
  id?: true
  name?: true
  key?: true
  userId?: true
  enabled?: true
  remaining?: true
  requestCount?: true
  lastRequest?: true
  expiresAt?: true
  createdAt?: true
  metadata?: true
  _all?: true
}

export type ApikeyAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which apikey to aggregate.
   */
  where?: Prisma.apikeyWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of apikeys to fetch.
   */
  orderBy?: Prisma.apikeyOrderByWithRelationInput | Prisma.apikeyOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.apikeyWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` apikeys from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` apikeys.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned apikeys
  **/
  _count?: true | ApikeyCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ApikeyAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ApikeySumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ApikeyMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ApikeyMaxAggregateInputType
}

export type GetApikeyAggregateType<T extends ApikeyAggregateArgs> = {
      [P in keyof T & keyof AggregateApikey]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateApikey[P]>
    : Prisma.GetScalarType<T[P], AggregateApikey[P]>
}




export type apikeyGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.apikeyWhereInput
  orderBy?: Prisma.apikeyOrderByWithAggregationInput | Prisma.apikeyOrderByWithAggregationInput[]
  by: Prisma.ApikeyScalarFieldEnum[] | Prisma.ApikeyScalarFieldEnum
  having?: Prisma.apikeyScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ApikeyCountAggregateInputType | true
  _avg?: ApikeyAvgAggregateInputType
  _sum?: ApikeySumAggregateInputType
  _min?: ApikeyMinAggregateInputType
  _max?: ApikeyMaxAggregateInputType
}

export type ApikeyGroupByOutputType = {
  id: string
  name: string | null
  key: string
  userId: string
  enabled: boolean
  remaining: number | null
  requestCount: number
  lastRequest: Date | null
  expiresAt: Date | null
  createdAt: Date
  metadata: runtime.JsonValue | null
  _count: ApikeyCountAggregateOutputType | null
  _avg: ApikeyAvgAggregateOutputType | null
  _sum: ApikeySumAggregateOutputType | null
  _min: ApikeyMinAggregateOutputType | null
  _max: ApikeyMaxAggregateOutputType | null
}

type GetApikeyGroupByPayload<T extends apikeyGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ApikeyGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ApikeyGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ApikeyGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ApikeyGroupByOutputType[P]>
      }
    >
  >



export type apikeyWhereInput = {
  AND?: Prisma.apikeyWhereInput | Prisma.apikeyWhereInput[]
  OR?: Prisma.apikeyWhereInput[]
  NOT?: Prisma.apikeyWhereInput | Prisma.apikeyWhereInput[]
  id?: Prisma.StringFilter<"apikey"> | string
  name?: Prisma.StringNullableFilter<"apikey"> | string | null
  key?: Prisma.StringFilter<"apikey"> | string
  userId?: Prisma.StringFilter<"apikey"> | string
  enabled?: Prisma.BoolFilter<"apikey"> | boolean
  remaining?: Prisma.IntNullableFilter<"apikey"> | number | null
  requestCount?: Prisma.IntFilter<"apikey"> | number
  lastRequest?: Prisma.DateTimeNullableFilter<"apikey"> | Date | string | null
  expiresAt?: Prisma.DateTimeNullableFilter<"apikey"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"apikey"> | Date | string
  metadata?: Prisma.JsonNullableFilter<"apikey">
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type apikeyOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrderInput | Prisma.SortOrder
  key?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  remaining?: Prisma.SortOrderInput | Prisma.SortOrder
  requestCount?: Prisma.SortOrder
  lastRequest?: Prisma.SortOrderInput | Prisma.SortOrder
  expiresAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  metadata?: Prisma.SortOrderInput | Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
}

export type apikeyWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  key?: string
  AND?: Prisma.apikeyWhereInput | Prisma.apikeyWhereInput[]
  OR?: Prisma.apikeyWhereInput[]
  NOT?: Prisma.apikeyWhereInput | Prisma.apikeyWhereInput[]
  name?: Prisma.StringNullableFilter<"apikey"> | string | null
  userId?: Prisma.StringFilter<"apikey"> | string
  enabled?: Prisma.BoolFilter<"apikey"> | boolean
  remaining?: Prisma.IntNullableFilter<"apikey"> | number | null
  requestCount?: Prisma.IntFilter<"apikey"> | number
  lastRequest?: Prisma.DateTimeNullableFilter<"apikey"> | Date | string | null
  expiresAt?: Prisma.DateTimeNullableFilter<"apikey"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"apikey"> | Date | string
  metadata?: Prisma.JsonNullableFilter<"apikey">
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id" | "key">

export type apikeyOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrderInput | Prisma.SortOrder
  key?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  remaining?: Prisma.SortOrderInput | Prisma.SortOrder
  requestCount?: Prisma.SortOrder
  lastRequest?: Prisma.SortOrderInput | Prisma.SortOrder
  expiresAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  metadata?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.apikeyCountOrderByAggregateInput
  _avg?: Prisma.apikeyAvgOrderByAggregateInput
  _max?: Prisma.apikeyMaxOrderByAggregateInput
  _min?: Prisma.apikeyMinOrderByAggregateInput
  _sum?: Prisma.apikeySumOrderByAggregateInput
}

export type apikeyScalarWhereWithAggregatesInput = {
  AND?: Prisma.apikeyScalarWhereWithAggregatesInput | Prisma.apikeyScalarWhereWithAggregatesInput[]
  OR?: Prisma.apikeyScalarWhereWithAggregatesInput[]
  NOT?: Prisma.apikeyScalarWhereWithAggregatesInput | Prisma.apikeyScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"apikey"> | string
  name?: Prisma.StringNullableWithAggregatesFilter<"apikey"> | string | null
  key?: Prisma.StringWithAggregatesFilter<"apikey"> | string
  userId?: Prisma.StringWithAggregatesFilter<"apikey"> | string
  enabled?: Prisma.BoolWithAggregatesFilter<"apikey"> | boolean
  remaining?: Prisma.IntNullableWithAggregatesFilter<"apikey"> | number | null
  requestCount?: Prisma.IntWithAggregatesFilter<"apikey"> | number
  lastRequest?: Prisma.DateTimeNullableWithAggregatesFilter<"apikey"> | Date | string | null
  expiresAt?: Prisma.DateTimeNullableWithAggregatesFilter<"apikey"> | Date | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"apikey"> | Date | string
  metadata?: Prisma.JsonNullableWithAggregatesFilter<"apikey">
}

export type apikeyCreateInput = {
  id?: string
  name?: string | null
  key: string
  enabled?: boolean
  remaining?: number | null
  requestCount?: number
  lastRequest?: Date | string | null
  expiresAt?: Date | string | null
  createdAt?: Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  user: Prisma.UserCreateNestedOneWithoutApiKeysInput
}

export type apikeyUncheckedCreateInput = {
  id?: string
  name?: string | null
  key: string
  userId: string
  enabled?: boolean
  remaining?: number | null
  requestCount?: number
  lastRequest?: Date | string | null
  expiresAt?: Date | string | null
  createdAt?: Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type apikeyUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  key?: Prisma.StringFieldUpdateOperationsInput | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  remaining?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  requestCount?: Prisma.IntFieldUpdateOperationsInput | number
  lastRequest?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  user?: Prisma.UserUpdateOneRequiredWithoutApiKeysNestedInput
}

export type apikeyUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  key?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  remaining?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  requestCount?: Prisma.IntFieldUpdateOperationsInput | number
  lastRequest?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type apikeyCreateManyInput = {
  id?: string
  name?: string | null
  key: string
  userId: string
  enabled?: boolean
  remaining?: number | null
  requestCount?: number
  lastRequest?: Date | string | null
  expiresAt?: Date | string | null
  createdAt?: Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type apikeyUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  key?: Prisma.StringFieldUpdateOperationsInput | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  remaining?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  requestCount?: Prisma.IntFieldUpdateOperationsInput | number
  lastRequest?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type apikeyUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  key?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  remaining?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  requestCount?: Prisma.IntFieldUpdateOperationsInput | number
  lastRequest?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type ApikeyListRelationFilter = {
  every?: Prisma.apikeyWhereInput
  some?: Prisma.apikeyWhereInput
  none?: Prisma.apikeyWhereInput
}

export type apikeyOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type apikeyCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  key?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  remaining?: Prisma.SortOrder
  requestCount?: Prisma.SortOrder
  lastRequest?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  metadata?: Prisma.SortOrder
}

export type apikeyAvgOrderByAggregateInput = {
  remaining?: Prisma.SortOrder
  requestCount?: Prisma.SortOrder
}

export type apikeyMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  key?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  remaining?: Prisma.SortOrder
  requestCount?: Prisma.SortOrder
  lastRequest?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type apikeyMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  key?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  enabled?: Prisma.SortOrder
  remaining?: Prisma.SortOrder
  requestCount?: Prisma.SortOrder
  lastRequest?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type apikeySumOrderByAggregateInput = {
  remaining?: Prisma.SortOrder
  requestCount?: Prisma.SortOrder
}

export type apikeyCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.apikeyCreateWithoutUserInput, Prisma.apikeyUncheckedCreateWithoutUserInput> | Prisma.apikeyCreateWithoutUserInput[] | Prisma.apikeyUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.apikeyCreateOrConnectWithoutUserInput | Prisma.apikeyCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.apikeyCreateManyUserInputEnvelope
  connect?: Prisma.apikeyWhereUniqueInput | Prisma.apikeyWhereUniqueInput[]
}

export type apikeyUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.apikeyCreateWithoutUserInput, Prisma.apikeyUncheckedCreateWithoutUserInput> | Prisma.apikeyCreateWithoutUserInput[] | Prisma.apikeyUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.apikeyCreateOrConnectWithoutUserInput | Prisma.apikeyCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.apikeyCreateManyUserInputEnvelope
  connect?: Prisma.apikeyWhereUniqueInput | Prisma.apikeyWhereUniqueInput[]
}

export type apikeyUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.apikeyCreateWithoutUserInput, Prisma.apikeyUncheckedCreateWithoutUserInput> | Prisma.apikeyCreateWithoutUserInput[] | Prisma.apikeyUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.apikeyCreateOrConnectWithoutUserInput | Prisma.apikeyCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.apikeyUpsertWithWhereUniqueWithoutUserInput | Prisma.apikeyUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.apikeyCreateManyUserInputEnvelope
  set?: Prisma.apikeyWhereUniqueInput | Prisma.apikeyWhereUniqueInput[]
  disconnect?: Prisma.apikeyWhereUniqueInput | Prisma.apikeyWhereUniqueInput[]
  delete?: Prisma.apikeyWhereUniqueInput | Prisma.apikeyWhereUniqueInput[]
  connect?: Prisma.apikeyWhereUniqueInput | Prisma.apikeyWhereUniqueInput[]
  update?: Prisma.apikeyUpdateWithWhereUniqueWithoutUserInput | Prisma.apikeyUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.apikeyUpdateManyWithWhereWithoutUserInput | Prisma.apikeyUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.apikeyScalarWhereInput | Prisma.apikeyScalarWhereInput[]
}

export type apikeyUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.apikeyCreateWithoutUserInput, Prisma.apikeyUncheckedCreateWithoutUserInput> | Prisma.apikeyCreateWithoutUserInput[] | Prisma.apikeyUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.apikeyCreateOrConnectWithoutUserInput | Prisma.apikeyCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.apikeyUpsertWithWhereUniqueWithoutUserInput | Prisma.apikeyUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.apikeyCreateManyUserInputEnvelope
  set?: Prisma.apikeyWhereUniqueInput | Prisma.apikeyWhereUniqueInput[]
  disconnect?: Prisma.apikeyWhereUniqueInput | Prisma.apikeyWhereUniqueInput[]
  delete?: Prisma.apikeyWhereUniqueInput | Prisma.apikeyWhereUniqueInput[]
  connect?: Prisma.apikeyWhereUniqueInput | Prisma.apikeyWhereUniqueInput[]
  update?: Prisma.apikeyUpdateWithWhereUniqueWithoutUserInput | Prisma.apikeyUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.apikeyUpdateManyWithWhereWithoutUserInput | Prisma.apikeyUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.apikeyScalarWhereInput | Prisma.apikeyScalarWhereInput[]
}

export type apikeyCreateWithoutUserInput = {
  id?: string
  name?: string | null
  key: string
  enabled?: boolean
  remaining?: number | null
  requestCount?: number
  lastRequest?: Date | string | null
  expiresAt?: Date | string | null
  createdAt?: Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type apikeyUncheckedCreateWithoutUserInput = {
  id?: string
  name?: string | null
  key: string
  enabled?: boolean
  remaining?: number | null
  requestCount?: number
  lastRequest?: Date | string | null
  expiresAt?: Date | string | null
  createdAt?: Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type apikeyCreateOrConnectWithoutUserInput = {
  where: Prisma.apikeyWhereUniqueInput
  create: Prisma.XOR<Prisma.apikeyCreateWithoutUserInput, Prisma.apikeyUncheckedCreateWithoutUserInput>
}

export type apikeyCreateManyUserInputEnvelope = {
  data: Prisma.apikeyCreateManyUserInput | Prisma.apikeyCreateManyUserInput[]
}

export type apikeyUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.apikeyWhereUniqueInput
  update: Prisma.XOR<Prisma.apikeyUpdateWithoutUserInput, Prisma.apikeyUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.apikeyCreateWithoutUserInput, Prisma.apikeyUncheckedCreateWithoutUserInput>
}

export type apikeyUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.apikeyWhereUniqueInput
  data: Prisma.XOR<Prisma.apikeyUpdateWithoutUserInput, Prisma.apikeyUncheckedUpdateWithoutUserInput>
}

export type apikeyUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.apikeyScalarWhereInput
  data: Prisma.XOR<Prisma.apikeyUpdateManyMutationInput, Prisma.apikeyUncheckedUpdateManyWithoutUserInput>
}

export type apikeyScalarWhereInput = {
  AND?: Prisma.apikeyScalarWhereInput | Prisma.apikeyScalarWhereInput[]
  OR?: Prisma.apikeyScalarWhereInput[]
  NOT?: Prisma.apikeyScalarWhereInput | Prisma.apikeyScalarWhereInput[]
  id?: Prisma.StringFilter<"apikey"> | string
  name?: Prisma.StringNullableFilter<"apikey"> | string | null
  key?: Prisma.StringFilter<"apikey"> | string
  userId?: Prisma.StringFilter<"apikey"> | string
  enabled?: Prisma.BoolFilter<"apikey"> | boolean
  remaining?: Prisma.IntNullableFilter<"apikey"> | number | null
  requestCount?: Prisma.IntFilter<"apikey"> | number
  lastRequest?: Prisma.DateTimeNullableFilter<"apikey"> | Date | string | null
  expiresAt?: Prisma.DateTimeNullableFilter<"apikey"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"apikey"> | Date | string
  metadata?: Prisma.JsonNullableFilter<"apikey">
}

export type apikeyCreateManyUserInput = {
  id?: string
  name?: string | null
  key: string
  enabled?: boolean
  remaining?: number | null
  requestCount?: number
  lastRequest?: Date | string | null
  expiresAt?: Date | string | null
  createdAt?: Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type apikeyUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  key?: Prisma.StringFieldUpdateOperationsInput | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  remaining?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  requestCount?: Prisma.IntFieldUpdateOperationsInput | number
  lastRequest?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type apikeyUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  key?: Prisma.StringFieldUpdateOperationsInput | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  remaining?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  requestCount?: Prisma.IntFieldUpdateOperationsInput | number
  lastRequest?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type apikeyUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  key?: Prisma.StringFieldUpdateOperationsInput | string
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  remaining?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  requestCount?: Prisma.IntFieldUpdateOperationsInput | number
  lastRequest?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  metadata?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}



export type apikeySelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  key?: boolean
  userId?: boolean
  enabled?: boolean
  remaining?: boolean
  requestCount?: boolean
  lastRequest?: boolean
  expiresAt?: boolean
  createdAt?: boolean
  metadata?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["apikey"]>

export type apikeySelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  key?: boolean
  userId?: boolean
  enabled?: boolean
  remaining?: boolean
  requestCount?: boolean
  lastRequest?: boolean
  expiresAt?: boolean
  createdAt?: boolean
  metadata?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["apikey"]>

export type apikeySelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  key?: boolean
  userId?: boolean
  enabled?: boolean
  remaining?: boolean
  requestCount?: boolean
  lastRequest?: boolean
  expiresAt?: boolean
  createdAt?: boolean
  metadata?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["apikey"]>

export type apikeySelectScalar = {
  id?: boolean
  name?: boolean
  key?: boolean
  userId?: boolean
  enabled?: boolean
  remaining?: boolean
  requestCount?: boolean
  lastRequest?: boolean
  expiresAt?: boolean
  createdAt?: boolean
  metadata?: boolean
}

export type apikeyOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "key" | "userId" | "enabled" | "remaining" | "requestCount" | "lastRequest" | "expiresAt" | "createdAt" | "metadata", ExtArgs["result"]["apikey"]>
export type apikeyInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type apikeyIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type apikeyIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $apikeyPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "apikey"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string | null
    key: string
    userId: string
    enabled: boolean
    remaining: number | null
    requestCount: number
    lastRequest: Date | null
    expiresAt: Date | null
    createdAt: Date
    metadata: runtime.JsonValue | null
  }, ExtArgs["result"]["apikey"]>
  composites: {}
}

export type apikeyGetPayload<S extends boolean | null | undefined | apikeyDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$apikeyPayload, S>

export type apikeyCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<apikeyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ApikeyCountAggregateInputType | true
  }

export interface apikeyDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['apikey'], meta: { name: 'apikey' } }
  /**
   * Find zero or one Apikey that matches the filter.
   * @param {apikeyFindUniqueArgs} args - Arguments to find a Apikey
   * @example
   * // Get one Apikey
   * const apikey = await prisma.apikey.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends apikeyFindUniqueArgs>(args: Prisma.SelectSubset<T, apikeyFindUniqueArgs<ExtArgs>>): Prisma.Prisma__apikeyClient<runtime.Types.Result.GetResult<Prisma.$apikeyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Apikey that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {apikeyFindUniqueOrThrowArgs} args - Arguments to find a Apikey
   * @example
   * // Get one Apikey
   * const apikey = await prisma.apikey.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends apikeyFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, apikeyFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__apikeyClient<runtime.Types.Result.GetResult<Prisma.$apikeyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Apikey that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {apikeyFindFirstArgs} args - Arguments to find a Apikey
   * @example
   * // Get one Apikey
   * const apikey = await prisma.apikey.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends apikeyFindFirstArgs>(args?: Prisma.SelectSubset<T, apikeyFindFirstArgs<ExtArgs>>): Prisma.Prisma__apikeyClient<runtime.Types.Result.GetResult<Prisma.$apikeyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Apikey that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {apikeyFindFirstOrThrowArgs} args - Arguments to find a Apikey
   * @example
   * // Get one Apikey
   * const apikey = await prisma.apikey.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends apikeyFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, apikeyFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__apikeyClient<runtime.Types.Result.GetResult<Prisma.$apikeyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Apikeys that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {apikeyFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Apikeys
   * const apikeys = await prisma.apikey.findMany()
   * 
   * // Get first 10 Apikeys
   * const apikeys = await prisma.apikey.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const apikeyWithIdOnly = await prisma.apikey.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends apikeyFindManyArgs>(args?: Prisma.SelectSubset<T, apikeyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$apikeyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Apikey.
   * @param {apikeyCreateArgs} args - Arguments to create a Apikey.
   * @example
   * // Create one Apikey
   * const Apikey = await prisma.apikey.create({
   *   data: {
   *     // ... data to create a Apikey
   *   }
   * })
   * 
   */
  create<T extends apikeyCreateArgs>(args: Prisma.SelectSubset<T, apikeyCreateArgs<ExtArgs>>): Prisma.Prisma__apikeyClient<runtime.Types.Result.GetResult<Prisma.$apikeyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Apikeys.
   * @param {apikeyCreateManyArgs} args - Arguments to create many Apikeys.
   * @example
   * // Create many Apikeys
   * const apikey = await prisma.apikey.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends apikeyCreateManyArgs>(args?: Prisma.SelectSubset<T, apikeyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Apikeys and returns the data saved in the database.
   * @param {apikeyCreateManyAndReturnArgs} args - Arguments to create many Apikeys.
   * @example
   * // Create many Apikeys
   * const apikey = await prisma.apikey.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Apikeys and only return the `id`
   * const apikeyWithIdOnly = await prisma.apikey.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends apikeyCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, apikeyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$apikeyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Apikey.
   * @param {apikeyDeleteArgs} args - Arguments to delete one Apikey.
   * @example
   * // Delete one Apikey
   * const Apikey = await prisma.apikey.delete({
   *   where: {
   *     // ... filter to delete one Apikey
   *   }
   * })
   * 
   */
  delete<T extends apikeyDeleteArgs>(args: Prisma.SelectSubset<T, apikeyDeleteArgs<ExtArgs>>): Prisma.Prisma__apikeyClient<runtime.Types.Result.GetResult<Prisma.$apikeyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Apikey.
   * @param {apikeyUpdateArgs} args - Arguments to update one Apikey.
   * @example
   * // Update one Apikey
   * const apikey = await prisma.apikey.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends apikeyUpdateArgs>(args: Prisma.SelectSubset<T, apikeyUpdateArgs<ExtArgs>>): Prisma.Prisma__apikeyClient<runtime.Types.Result.GetResult<Prisma.$apikeyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Apikeys.
   * @param {apikeyDeleteManyArgs} args - Arguments to filter Apikeys to delete.
   * @example
   * // Delete a few Apikeys
   * const { count } = await prisma.apikey.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends apikeyDeleteManyArgs>(args?: Prisma.SelectSubset<T, apikeyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Apikeys.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {apikeyUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Apikeys
   * const apikey = await prisma.apikey.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends apikeyUpdateManyArgs>(args: Prisma.SelectSubset<T, apikeyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Apikeys and returns the data updated in the database.
   * @param {apikeyUpdateManyAndReturnArgs} args - Arguments to update many Apikeys.
   * @example
   * // Update many Apikeys
   * const apikey = await prisma.apikey.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Apikeys and only return the `id`
   * const apikeyWithIdOnly = await prisma.apikey.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends apikeyUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, apikeyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$apikeyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Apikey.
   * @param {apikeyUpsertArgs} args - Arguments to update or create a Apikey.
   * @example
   * // Update or create a Apikey
   * const apikey = await prisma.apikey.upsert({
   *   create: {
   *     // ... data to create a Apikey
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Apikey we want to update
   *   }
   * })
   */
  upsert<T extends apikeyUpsertArgs>(args: Prisma.SelectSubset<T, apikeyUpsertArgs<ExtArgs>>): Prisma.Prisma__apikeyClient<runtime.Types.Result.GetResult<Prisma.$apikeyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Apikeys.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {apikeyCountArgs} args - Arguments to filter Apikeys to count.
   * @example
   * // Count the number of Apikeys
   * const count = await prisma.apikey.count({
   *   where: {
   *     // ... the filter for the Apikeys we want to count
   *   }
   * })
  **/
  count<T extends apikeyCountArgs>(
    args?: Prisma.Subset<T, apikeyCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ApikeyCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Apikey.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApikeyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ApikeyAggregateArgs>(args: Prisma.Subset<T, ApikeyAggregateArgs>): Prisma.PrismaPromise<GetApikeyAggregateType<T>>

  /**
   * Group by Apikey.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {apikeyGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends apikeyGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: apikeyGroupByArgs['orderBy'] }
      : { orderBy?: apikeyGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, apikeyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApikeyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the apikey model
 */
readonly fields: apikeyFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for apikey.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__apikeyClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the apikey model
 */
export interface apikeyFieldRefs {
  readonly id: Prisma.FieldRef<"apikey", 'String'>
  readonly name: Prisma.FieldRef<"apikey", 'String'>
  readonly key: Prisma.FieldRef<"apikey", 'String'>
  readonly userId: Prisma.FieldRef<"apikey", 'String'>
  readonly enabled: Prisma.FieldRef<"apikey", 'Boolean'>
  readonly remaining: Prisma.FieldRef<"apikey", 'Int'>
  readonly requestCount: Prisma.FieldRef<"apikey", 'Int'>
  readonly lastRequest: Prisma.FieldRef<"apikey", 'DateTime'>
  readonly expiresAt: Prisma.FieldRef<"apikey", 'DateTime'>
  readonly createdAt: Prisma.FieldRef<"apikey", 'DateTime'>
  readonly metadata: Prisma.FieldRef<"apikey", 'Json'>
}
    

// Custom InputTypes
/**
 * apikey findUnique
 */
export type apikeyFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyInclude<ExtArgs> | null
  /**
   * Filter, which apikey to fetch.
   */
  where: Prisma.apikeyWhereUniqueInput
}

/**
 * apikey findUniqueOrThrow
 */
export type apikeyFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyInclude<ExtArgs> | null
  /**
   * Filter, which apikey to fetch.
   */
  where: Prisma.apikeyWhereUniqueInput
}

/**
 * apikey findFirst
 */
export type apikeyFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyInclude<ExtArgs> | null
  /**
   * Filter, which apikey to fetch.
   */
  where?: Prisma.apikeyWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of apikeys to fetch.
   */
  orderBy?: Prisma.apikeyOrderByWithRelationInput | Prisma.apikeyOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for apikeys.
   */
  cursor?: Prisma.apikeyWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` apikeys from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` apikeys.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of apikeys.
   */
  distinct?: Prisma.ApikeyScalarFieldEnum | Prisma.ApikeyScalarFieldEnum[]
}

/**
 * apikey findFirstOrThrow
 */
export type apikeyFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyInclude<ExtArgs> | null
  /**
   * Filter, which apikey to fetch.
   */
  where?: Prisma.apikeyWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of apikeys to fetch.
   */
  orderBy?: Prisma.apikeyOrderByWithRelationInput | Prisma.apikeyOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for apikeys.
   */
  cursor?: Prisma.apikeyWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` apikeys from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` apikeys.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of apikeys.
   */
  distinct?: Prisma.ApikeyScalarFieldEnum | Prisma.ApikeyScalarFieldEnum[]
}

/**
 * apikey findMany
 */
export type apikeyFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyInclude<ExtArgs> | null
  /**
   * Filter, which apikeys to fetch.
   */
  where?: Prisma.apikeyWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of apikeys to fetch.
   */
  orderBy?: Prisma.apikeyOrderByWithRelationInput | Prisma.apikeyOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing apikeys.
   */
  cursor?: Prisma.apikeyWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` apikeys from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` apikeys.
   */
  skip?: number
  distinct?: Prisma.ApikeyScalarFieldEnum | Prisma.ApikeyScalarFieldEnum[]
}

/**
 * apikey create
 */
export type apikeyCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyInclude<ExtArgs> | null
  /**
   * The data needed to create a apikey.
   */
  data: Prisma.XOR<Prisma.apikeyCreateInput, Prisma.apikeyUncheckedCreateInput>
}

/**
 * apikey createMany
 */
export type apikeyCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many apikeys.
   */
  data: Prisma.apikeyCreateManyInput | Prisma.apikeyCreateManyInput[]
}

/**
 * apikey createManyAndReturn
 */
export type apikeyCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * The data used to create many apikeys.
   */
  data: Prisma.apikeyCreateManyInput | Prisma.apikeyCreateManyInput[]
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * apikey update
 */
export type apikeyUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyInclude<ExtArgs> | null
  /**
   * The data needed to update a apikey.
   */
  data: Prisma.XOR<Prisma.apikeyUpdateInput, Prisma.apikeyUncheckedUpdateInput>
  /**
   * Choose, which apikey to update.
   */
  where: Prisma.apikeyWhereUniqueInput
}

/**
 * apikey updateMany
 */
export type apikeyUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update apikeys.
   */
  data: Prisma.XOR<Prisma.apikeyUpdateManyMutationInput, Prisma.apikeyUncheckedUpdateManyInput>
  /**
   * Filter which apikeys to update
   */
  where?: Prisma.apikeyWhereInput
  /**
   * Limit how many apikeys to update.
   */
  limit?: number
}

/**
 * apikey updateManyAndReturn
 */
export type apikeyUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * The data used to update apikeys.
   */
  data: Prisma.XOR<Prisma.apikeyUpdateManyMutationInput, Prisma.apikeyUncheckedUpdateManyInput>
  /**
   * Filter which apikeys to update
   */
  where?: Prisma.apikeyWhereInput
  /**
   * Limit how many apikeys to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * apikey upsert
 */
export type apikeyUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyInclude<ExtArgs> | null
  /**
   * The filter to search for the apikey to update in case it exists.
   */
  where: Prisma.apikeyWhereUniqueInput
  /**
   * In case the apikey found by the `where` argument doesn't exist, create a new apikey with this data.
   */
  create: Prisma.XOR<Prisma.apikeyCreateInput, Prisma.apikeyUncheckedCreateInput>
  /**
   * In case the apikey was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.apikeyUpdateInput, Prisma.apikeyUncheckedUpdateInput>
}

/**
 * apikey delete
 */
export type apikeyDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyInclude<ExtArgs> | null
  /**
   * Filter which apikey to delete.
   */
  where: Prisma.apikeyWhereUniqueInput
}

/**
 * apikey deleteMany
 */
export type apikeyDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which apikeys to delete
   */
  where?: Prisma.apikeyWhereInput
  /**
   * Limit how many apikeys to delete.
   */
  limit?: number
}

/**
 * apikey without action
 */
export type apikeyDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the apikey
   */
  select?: Prisma.apikeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the apikey
   */
  omit?: Prisma.apikeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.apikeyInclude<ExtArgs> | null
}
